{"ast":null,"code":"var _jsxFileName = \"/Users/rohitkumar/Documents/CS387/lab5/frontend1/src/pages/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // If the user is already logged in, make an API call \n  // to check their authentication status.\n  // If logged in, redirect to the dashboard.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement API call here\n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to understand how to manage component state\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // This function handles input field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Read about the spread operator (...) to understand this syntax\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // TODO: Implement the sign-up operation\n  // This function should send form data to the server\n  // and handle success/failure responses.\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Implement the sign-up logic here\n  };\n\n  // TODO: Use JSX to create a sign-up form with input fields for:\n  // - Username\n  // - Email\n  // - Password\n  // - A submit button\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"JY+tKYgw8kQvoNCp5d+OLKNIFW0=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","apiUrl","jsxDEV","_jsxDEV","Signup","_s","navigate","checkStatus","formData","setFormData","username","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohitkumar/Documents/CS387/lab5/frontend1/src/pages/Signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\n\nconst Signup = () => {\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // If the user is already logged in, make an API call \n  // to check their authentication status.\n  // If logged in, redirect to the dashboard.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement API call here\n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to understand how to manage component state\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // This function handles input field changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    // Read about the spread operator (...) to understand this syntax\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // TODO: Implement the sign-up operation\n  // This function should send form data to the server\n  // and handle success/failure responses.\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Implement the sign-up logic here\n  };\n\n  // TODO: Use JSX to create a sign-up form with input fields for:\n  // - Username\n  // - Email\n  // - Password\n  // - A submit button\n  return (\n    <div>\n      {/* Implement the form UI here */}\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;IAAA,CACD;IACDA,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;;IAEhC;IACAR,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACO,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA,oBACEhB,OAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,MAAM;EAAA,QACOJ,WAAW;AAAA;AAAAwB,EAAA,GADxBpB,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}